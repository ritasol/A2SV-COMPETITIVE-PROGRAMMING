# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        hash_set = {}
        curr = head
        while curr and curr.next:
            if hash_set.get(curr) == None:
                hash_set[curr] = 1
            else:
                hash_set[curr] += 1

            if hash_set[curr] > 1:
                return curr
            curr = curr.next
