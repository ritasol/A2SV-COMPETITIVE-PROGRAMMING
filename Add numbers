# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        

        stack1 = []
        ans = []
        
        while l1:
            
            stack1.append(l1.val)
            l1 = l1.next
        m = stack1[-1]
        f1 = len(stack1) - 2
        while f1 >= 0:
            m = str(m) + str(stack1[f1])
            f1 -= 1
        stack2 = []
        while l2:
            stack2.append(l2.val)
            l2 = l2.next
        n = stack2[-1]
        f2 = len(stack2) - 2
        while f2 >= 0:
            n = str(n) + str(stack2[f2])
            f2 -= 1
        summ = int(n) + int(m)
        sum_str = str(summ)

        i = len(sum_str) - 1
        while i >= 0:
            ans.append(int(sum_str[i]))
            i -= 1
    
        cur = ListNode(0)
        head = cur
        for e in ans:
            cur.next= ListNode(e)
            cur = cur.next
        return head.next
